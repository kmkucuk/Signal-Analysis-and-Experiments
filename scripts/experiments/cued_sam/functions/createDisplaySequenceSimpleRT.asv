


function [displayVectors, combinedReversalMatrix] = createDisplaySequenceSimpleRT (stim_resp_durations, FCRT_testRepmat,white_colored)

%% Initialize stimulus presentation vectors
rndSave=rng('shuffle');
stimulus_duration       = stim_resp_durations(1,:);
press_duration          = stim_resp_durations(2,:);
FCRT_testSequence       = FCRT_testRepmat;
if white_colored == 2
    presentation
    reversalVector              = repmat([1 3 5 7 1 3 5 7],[1,FCRT_testSequence]); % reproduce elements that will be used for reversals. 
elseif white_colored == 1
    
    
flowVectorTest              = repmat([1 2 3 4 5 2 7 4],[1,FCRT_testSequence]); % red sequence is 1,2,3,4 and blue sequence is 5,2,7,4. This will be changed later on
                                                                               % this is used to define reversals for each
                                                                               % color/presentation order pairs.
                                                                   
                                                                               
stimulusDurationVector      = repmat(stimulus_duration,[1,FCRT_testSequence]);
cumulativeDurations         = cumsum(stimulusDurationVector)-stimulus_duration(1); % get cumulative stimulus durations for spotting endogenous reversal onsets
pressDurationVector         = repmat(press_duration,[1,FCRT_testSequence]); % reproduce press durations for the number of reversals
reversalIndex               = ones(1,FCRT_testSequence*8); % create a vector with the same length of flow vector. This will be used for defining motion directions.
if white_colored == 2
    reversalVector              = repmat([1 3 5 7 1 3 5 7],[1,FCRT_testSequence]); % reproduce elements that will be used for reversals. 
elseif white_colored == 1
    
                                                                          % Divided by 8 because there are four stimuli, each has to get equal number of reversals, and reversal count has to stay the same 
combinedReversalMatrix      = [reversalVector;pressDurationVector]; % combine reversal and press duration indices 
permIndices                 = randperm(length(pressDurationVector)); % randomize combined indices above 
combinedReversalMatrix      = combinedReversalMatrix(:,permIndices); % select the randomized order 


displayVectors=[flowVectorTest; stimulusDurationVector; cumulativeDurations; reversalIndex];
